security:
    enable_authenticator_manager: true
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
        App\Entity\Utilisateur:
            algorithm: auto
            # Vous pouvez aussi spécifier bcrypt ou argon2i/argon2id si nécessaire

    providers:
        # Configuration pour charger les utilisateurs depuis la base de données
        app_user_provider:
            entity:
                class: App\Entity\Utilisateur
                property: email

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        login:
            pattern: ^/api/login
            stateless: true
            json_login:
                check_path: /api/login_check
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure

        api:
            pattern:   ^/api
            stateless: true
            jwt: ~

        # Assurez-vous que votre application gère correctement l'authentification pour les routes non couvertes par api
        main:
            lazy: true
            provider: app_user_provider
            logout:
                path: app_logout
            # Autres méthodes d'authentification si nécessaire

    access_control:
        # Autoriser l'accès anonyme à certaines routes
         #- { path: ^/api/login_check, roles: IS_AUTHENTICATED_ANONYMOUSLY }
         #- { path: ^/api/register, roles: IS_AUTHENTICATED_ANONYMOUSLY }
         #- { path: ^/api/profile, roles: IS_AUTHENTICATED_FULLY }
        
        
        
        #- { path: ^/api/profile, roles: ROLE_USER }
        #- { path: ^/api/utilisateurs/edit/.*, roles: ROLE_USER }
        #- { path: ^/api/utilisateurs/delete/.*, roles: ROLE_USER }
        
        #- { path: ^/api/register, roles: ROLE_USER }
        #- { path: ^/api/profile, roles: ROLE_USER }
        #- { path: ^/api/produits/new, roles: IS_AUTHENTICATED_FULLY }
        #- { path: ^/api/produits/.*/edit, roles: IS_AUTHENTICATED_FULLY }
        #- { path: ^/api/produitsdelete/.*, roles: IS_AUTHENTICATED_FULLY }
        #- { path: ^/api/utilisateurs/edit/.*, roles: IS_AUTHENTICATED_FULLY }
        #- { path: ^/api/utilisateurs/delete/.*, roles: IS_AUTHENTICATED_FULLY }
        # Sécuriser les routes de l'API
        #- { path: ^/api, roles: IS_AUTHENTICATED_FULLY }

when@test:
    security:
        password_hashers:
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4
                time_cost: 3
                memory_cost: 10
